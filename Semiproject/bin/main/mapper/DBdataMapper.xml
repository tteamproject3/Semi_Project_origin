<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.campus.myapp.dao.DBdataDAO">
	<insert id="inputdata">
		insert into festival(
		festival_id,
		festival_place ,
		festival_start_date ,
		festival_end_date ,
		festival_content,
		festival_phonenum,
		festival_site,
		festival_road_name_addr,
		festival_lotnum_addr,
		festival_lat,
		festival_long)
		values (
		#{festival_id},
		#{festival_place},
		#{festival_start_date},
		#{festival_end_date},
		#{festival_content},
		#{festival_phonenum},
		#{festival_site},
		#{festival_road_name_addr},
		#{festival_lotnum_addr},
		#{festival_lat},
		#{festival_long})
	</insert>
	<insert id="inputdataT">
		insert into touristSpot(
		tour_id,
		tour_content,
		tour_parkinglot_num,
		tour_phonenum,
		tour_road_name_addr,
		tour_lotnum_addr,
		tour_lat,
		tour_long
		)
		values (
		#{tour_id},
		#{tour_content},
		#{tour_parkinglot_num},
		#{tour_phonenum},
		#{tour_road_name_addr},
		#{tour_lotnum_addr},
		#{tour_lat},
		#{tour_long}
		)
	</insert>
	<delete id="deleteFDB">
		delete from festival;
	</delete>
	<delete id="deleteTDB">
		delete from touristSpot;
	</delete>
	<update id="updateFDB">
		ALTER TABLE festival AUTO_INCREMENT = 1;
	</update>
	<update id="updateTDB">
		ALTER TABLE touristSpot AUTO_INCREMENT = 1;
	</update>
	<select id="GmapGo" resultType="tourVO">
		select
		tour_num,
		tour_id,
		tour_content,
		tour_parkinglot_num,
		tour_phonenum,
		tour_road_name_addr,
		tour_lotnum_addr,
		tour_lat,
		tour_long
		from touristSpot
	</select>
	<select id="getPdata" resultType="tourVO">
		select
		tour_num,
		tour_id,
		tour_content,
		tour_parkinglot_num,
		tour_phonenum,
		tour_road_name_addr,
		tour_lotnum_addr,
		tour_lat,
		tour_long
		from touristSpot
		where tour_num = ${param1} 
	</select>
	<select id="getLI" resultType="tourVO">
	select tour_num, tour_id, tour_lat, tour_long ,(6371*acos(cos(radians(${param1}))*cos(radians(tour_lat))*cos(radians(tour_long)
-radians(${param2}))+sin(radians(${param1}))*sin(radians(tour_lat))))
AS tour_distance FROM touristSpot HAVING tour_distance &lt; 1000 ORDER BY tour_distance asc LIMIT 0 , 7
	</select>
	<select id="gmapGo2" resultType="FestivalVO">
		select
		festival_num,
		festival_id,
		festival_place ,
		festival_start_date ,
		festival_end_date ,
		festival_content,
		festival_phonenum,
		festival_site,
		festival_road_name_addr,
		festival_lotnum_addr,
		festival_lat,
		festival_long
		from festival
		where festival_start_date BETWEEN #{param1} AND #{param2} or festival_end_date  BETWEEN #{param1} AND #{param2};
	</select>
	<select id="getPdata2" resultType="FestivalVO">
		select
		festival_num,
		festival_id,
		festival_place ,
		festival_start_date ,
		festival_end_date ,
		festival_content,
		festival_phonenum,
		festival_site,
		festival_road_name_addr,
		festival_lotnum_addr,
		festival_lat,
		festival_long
		from festival
		where festival_num = ${param1} 
	</select>
	
		<select id="getLI2" resultType="FestivalVO">
	select festival_num, festival_id, festival_lat, festival_long, festival_start_date ,festival_end_date,(6371*acos(cos(radians(${param1}))*cos(radians(festival_lat))*cos(radians(festival_long)
-radians(${param2}))+sin(radians(${param1}))*sin(radians(festival_lat))))
AS festival_distance FROM festival HAVING festival_distance &lt; 1000 and festival_start_date BETWEEN #{param3} AND #{param4} or festival_end_date  BETWEEN #{param3} AND #{param4}
 ORDER BY festival_distance asc LIMIT 0 , 7
	</select>
</mapper>
