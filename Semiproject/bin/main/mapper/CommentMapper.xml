<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.campus.myapp.dao.CommentDAO">
	<insert id="commentInsert">
		insert into comment(comment_id, google_id, post_id, comment_content)
		values(#{comment_id}, #{google_id},${post_id}, #{comment_content});
	</insert>
	
	<select id="commentList" resultType="CommentVO">
		select comment_id, post_id, google_id, comment_content, comment_registration_date
		from comment
		where post_id =${param1}
		order by comment_id asc;
	</select>
	
	<update id="commentUpdate">
		update comment
		set comment_content=#{comment_content}
		where comment_id=${comment_id} and google_id=#{google_id}
	</update>
	
	<delete id="commentDelete">
		delete from comment
		where comment_id=${param1} and google_id=#{param2};
	</delete>
	
	<select id="commentCount" resultType="int">
		select count(comment_id)
		from comment
		where post_id=${param1}
	</select>
	
	<select id="getMyComment" resultType="CommentVO">
		select
		t1.comment_id,
		t1.post_id,
		t1.comment_content,
		t1.comment_registration_date, 
		t2.post_title
		from
		(select 
		comment_id, post_id, comment_content,
		date_format(comment_registration_date ,'%m-%d %h:%i') comment_registration_date 
		from comment
		<if test="searchWord!=null">
			where ${searchKey} like '%${searchWord}%'
		</if>
		order by post_id desc
		limit ${onePageRecord} offset ${offsetPoint}) t1
		left outer join
		(select 
		post_id, post_title
		from post) t2
		on t1.post_id = t2.post_id
	</select>
	
	<delete id="commentMultiDel">
		delete from comment
		<where>
			<foreach item="item" index="index" collection="noList" open="comment_id in (" separator="," close=")">
              ${item}
			</foreach>
		</where>
	</delete>
	
	<select id="totalRecord" resultType="int">
		select count(comment_id) cnt from comment
		<if test="searchWord!=null">
			where ${searchKey} like '%${searchWord}%'
		</if>
	</select>
</mapper>